<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="MAIN" Id="{12747018-c78d-4858-80c0-9a838bb3fec0}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	// Standard TcVision State Machine Variables
	hr						:	HRESULT;
	
	fbCamera				:	FB_VN_SimpleCameraControl;
	eState					:	ETcVnCameraState;
	
	ipImageIn				:	ITcVnImage;
	ipImageInDisp			:	ITcVnDisplayableImage;
	
	// Sample Specific Variables
	fbWriteImage			:	FB_VN_WriteImage := (nTimeout := T#500MS);
	sFilePath 				:	STRING(255) := '';
	bWriteImageTrigger		:	BOOL;
	bWriteImageWaitResult	:	BOOL;
	bWriteImageDone			:	BOOL;
	nReturnCode				:   UDINT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[//	Disclaimer
  	
//	THIS publication contains statements about the suitability OF our products FOR certain 
//	areas OF application. These statements are based on typical features OF our products. 
//	The examples shown in THIS publication are FOR demonstration purposes only. The 
//	information provided herein should NOT be regarded as specific operation characteristics. 
//	It is incumbent on the customer TO check AND decide whether a product is suitable FOR use 
//	in a particular application. We DO NOT give ANY warranty that the source code which is 
//	made available with this publication is complete or accurate. 
  	
//	THE SAMPLE CODE CONTAINED IN THIS PUBLICATION IS PROVIDED “AS IS” WITHOUT WARRANTY OF ANY 
//	KIND, EITHER EXPRESSED, IMPLIED OR STATUTORY, INCLUDING WITHOUT LIMITATION, ANY WARRANTY 
//	WITH RESPECT TO NON-INFRINGEMENT, FREEDOM FROM PROPRIETARY RIGHTS OF THIRD PARTIES OR 
//	FITNESS FOR ANY PARTICULAR PURPOSE. 
  	
//	THIS publication may be changed FROM TIME TO TIME without prior notice. No liability 
//	is assumed FOR errors AND/OR omissions. Our products are described in detail in our 
//	data sheets AND documentations. Product-specific warnings AND cautions must be observed. 
//	FOR the latest version OF our data sheets AND documentations visit our website 
//	(www.beckhoff.de). 
  	
//	© Beckhoff Automation GmbH & Co. KG, March 2020
  	
//	The reproduction, distribution AND utilization OF THIS document as well as the 
//	communication OF its contents TO others without express authorization is prohibited. 
//	Offenders will be held liable FOR the payment OF damages. All rights reserved in the 
//	event of the grant of a patent, utility model or design.

//	==========================================================================================

//	Sample: Write Image to File
//	----------------------------------------

// Steps To Do
// --------------
// 1. Add the sample images to the FileSource1 Control
// 2. Activate the Configuration -> Start TwinCAT System to run -> Login PLC -> Start PLC
// 3. Set the variable value of bWriteImageTrigger to TRUE, to save the next camera image

// Alternative for 1.:
// --------------
// a. Add a camera to the solution
// b. Initialize fbCamera with the image provider of the camera

eState := fbCamera.GetState();

CASE eState OF
		
TCVN_CS_INITIAL, TCVN_CS_INITIALIZING, TCVN_CS_INITIALIZED, TCVN_CS_OPENING, TCVN_CS_OPENED, TCVN_CS_STARTACQUISITION:
	fbCamera.StartAcquisition();

TCVN_CS_ACQUIRING:

	hr := fbCamera.GetCurrentImage(ipImageIn);

	IF SUCCEEDED(hr) AND ipImageIn <> 0 THEN

		IF NOT fbWriteImage.bBusy AND bWriteImageTrigger THEN
			bWriteImageTrigger := FALSE;
			bWriteImageDone := FALSE;
			bWriteImageWaitResult := TRUE;
			
			// With setting sFilePath:= '' to an empty string the images are saved under the default path
			// The default path can be set at the service configuration tab of the Vision Node
			// If sFilePath is set, it must contain either the full path, the image name and type 
			// or a relative path with the image name and type or just the image name and type
			// for example: sFilePath := 'C:\WriteImage\ImageName.bmp' or '..\ImageName.bmp' or 'ImageName.bmp'
			// All file paths refer to the selected target system
			fbWriteImage(ipImage := ipImageIn, sFilePath := sFilePath, bWrite := TRUE);
		END_IF
		
		hr := F_VN_TransformIntoDisplayableImage(ipImageIn, ipImageInDisp, hr);
	END_IF

	fbWriteImage(sFilepath:= '', bWrite := FALSE);

	IF bWriteImageWaitResult AND NOT fbWriteImage.bBusy THEN
		bWriteImageWaitResult := FALSE;
		// Check if fbWriteImage was finished successfully or implement error handling
		IF fbWriteImage.bError THEN
			nReturnCode := fbWriteImage.nErrorId AND 16#FFF;
		ELSE
			bWriteImageDone := TRUE;
			nReturnCode := 0;
		END_IF
	END_IF	
	
TCVN_CS_ERROR:
	fbCamera.Reset();

END_CASE
]]></ST>
    </Implementation>
    <LineIds Name="MAIN">
      <LineId Id="148" Count="31" />
      <LineId Id="32" Count="15" />
      <LineId Id="221" Count="0" />
      <LineId Id="49" Count="14" />
      <LineId Id="200" Count="1" />
      <LineId Id="67" Count="0" />
      <LineId Id="198" Count="0" />
      <LineId Id="128" Count="0" />
      <LineId Id="68" Count="5" />
      <LineId Id="75" Count="2" />
      <LineId Id="129" Count="5" />
      <LineId Id="89" Count="1" />
      <LineId Id="98" Count="0" />
      <LineId Id="92" Count="3" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>